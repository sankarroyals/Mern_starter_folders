# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
name: Deploy

on:
  push:
    branches: ["main"]

jobs:
  Deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    environment: aws-deploy
    steps:
      - uses: actions/checkout@v3
      - name: Build & Deploy
        env:
          PRIVATE_KEY: ${{secrets.AWS_SSH_KEY}}
          HOSTNAME: ${{secrets.AWS_PUBLIC_KEY}}
          PROD_ENV_FILE: ${{secrets.PROD_ENV_FILE}}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ubuntu@${HOSTNAME} '
            sudo su -
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
            . ~/.nvm/nvm.sh
            nvm install node
            sudo apt install git -y
            npm i -g pm2
            rm -rf ./Beyinc_Backend
            git clone https://github.com/Beyinc/Beyinc_Backend.git
            cd ./Beyinc_Backend
            npm i
            touch config.env

            echo PORT=${{ secrets.PORT }} >> config.env
            echo API_KEY=${{ secrets.API_KEY }} >> config.env
            echo FRONTEND_SITE=${{ secrets.FRONTEND_SITE }} >> config.env
            echo ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }} >> config.env
            echo ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }} >> config.env
            echo REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }} >> config.env
            echo MONGODB_URI=${{ secrets.MONGODB_URI }} >> config.env
            echo EMAIL=${{ secrets.EMAIL }} >> config.env
            echo EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }} >> config.env
            echo CLOUDINARY_NAME=${{ secrets.CLOUDINARY_NAME }} >> config.env
            echo CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }} >> config.env
            echo CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }} >> config.env
            echo TWILIO_ACCOUNTSID=${{ secrets.TWILIO_ACCOUNTSID }} >> config.env
            echo TWILIO_AUTHTOKEN=${{ secrets.TWILIO_AUTHTOKEN }} >> config.env
            echo TWILIO_PHONE=${{ secrets.TWILIO_PHONE }} >> config.env

            pm2 delete beyinc-backend-api || : && pm2 start server.js --name 'beyinc-backend-api'
            pm2 save
              '

# name: Deploy to AWS
# on:
#   push:
#     branches:
#       - "main"
# env:
#   AWS_REGION: ap-south-1
#   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
#   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#   PRIVATE_SSH_KEY: ${{ secrets.AWS_SSH_KEY }}
#   SERVER_PUBLIC_IP: ${{ secrets.AWS_PUBLIC_KEY }}
#   PROD_ENV_FILE: ${{ secrets.PROD_ENV_FILE }}

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       - name: Deploy backend to EC2
#         env:
#           AWS_DEFAULT_REGION: ap-south-1
#         uses: appleboy/ssh-action@v0.1.10
#         with:
#           host: ${{ env.SERVER_PUBLIC_IP }}
#           username: ubuntu
#           key: ${{ env.PRIVATE_SSH_KEY }}
#           envs: PRIVATE_SSH_KEY,AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,AWS_DEFAULT_REGION,AWS_REGION,PROD_ENV_FILE
#           script: |-
#             sudo su
#             sudo apt install git -y
#             git clone https://github.com/Beyinc/Beyinc_Backend.git
#             cd ./Beyinc_Backend
#             touch config.env
#             echo "${{ secrets.PROD_ENV_FILE }}" > config.env
#             pm2 delete beyinc-backend-api || : && pm2 start server.js -i 1 --name 'beyinc-backend-api'
#             pm2 save
